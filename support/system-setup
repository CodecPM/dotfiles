#!/bin/bash

################################################################
# Getting system ready #########################################
################################################################

# Uncomment partner sources for apt
distro=`lsb_release --codename | cut -f2`
line="${distro} partner"
sudo sed -i "/${line}/ s/# *//" /etc/apt/sources.list

# Do a basic update
sudo apt-get update

# Install Git & Git Extras
sudo apt-get install --yes --force-yes git git-core tig curl

# Install Necessary Libraries for Ruby

sudo apt-get install -y git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev

sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev
################################################################
# Heroku Toolbelt ##############################################
################################################################


echo "This script requires superuser access to install apt packages."
echo "You will be prompted for your password by sudo."

# clear any previous sudo permission
sudo -k

# run inside sudo
sudo sh <<SCRIPT
  # add heroku repository to apt
  echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list

  # install heroku's release key for package verification
  wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -

  # update your sources
  apt-get update

  # install the toolbelt
  apt-get install -y heroku-toolbelt
SCRIPT


################################################################
# Rubies #######################################################
################################################################

create_global_gems_file( ) {
cat > ~/.rvm/gemsets/global.gems << EOF
rubygems-bundler
bundler
rake
rvm
cheat
awesome_print
looksee
hirb
pry
rails
foreman
unicorn
devkit
EOF
}

# Install RVM
which rvm &> /dev/null

if [ $? -eq 1 ]; then
  gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
  echo `curl -L https://get.rvm.io | bash -s stable`
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

  create_global_gems_file

  # Install different rubies
  # rvm install ree-1.8.7
  # rvm install 1.9.2
  # rvm install 1.9.3
  rvm install 2.1.0
  rvm all do rvm docs generate
fi

# Picking an RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
rvm --default use 2.1.0

################################################################
# Basic Essentials To Get Started ##############################
################################################################

# Install EHC dotfiles
dd="~/Workspace/dotfiles"
if [ -d ~/Workspace/dotfiles ]; then
 echo `cd ~/Workspace/dotfiles && git pull --rebase`
else
 echo `git clone git://github.com/ehc/dotfiles ~/Workspace/dotfiles`
fi

# Install Common Dotfiles
cd ~/Workspace/dotfiles && rake install

source ~/.bashrc

# Install basic packages needed to run this script
sudo apt-get install --yes --force-yes build-essential curl tree libreadline6-dev zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev autoconf libgdbm-dev libncurses5-dev automake libtool bison libffi-dev linux-headers-`uname -r` vim openssh-server openssh-server unity-webapps-googledocs

################################################################
# Removing remnants of older installations #####################
################################################################

# Remove openjdk
sudo apt-get remove --yes --force-yes openjdk-6-jre openjdk-7-jre openjdk-7-jdk default-jre default-jre-headless

# Remove Maven2
sudo apt-get purge --yes --force-yes maven2


# Remove Web Apps
sudo apt-get purge unity-webapps-amazon

# Remove remnants of other libraries
sudo apt-get clean
sudo apt-get autoremove


################################################################
# Third party repos ############################################
################################################################

# Install Oracle Java
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update -y
sudo apt-get install oracle-java8-installer


# Chromium
sudo apt-get install --yes --force-yes chromium-browser flashplugin-installer
sudo cp /usr/lib/flashplugin-installer/libflashplayer.so /usr/lib/chromium-browser/plugins

# Misc
sudo apt-get install --yes --force-yes xclip compizconfig-settings-manager imagemagick libmagickcore-dev libcurl4-openssl-dev apache2-utils gnome-tweak-tool ngrok-client

# Setting caps as super
setxkbmap -option caps:super

################################################################
# Databases ####################################################
################################################################

# Install MySql
sudo apt-get install --yes --force-yes mysql-server libmysqlclient-dev libmysql-ruby
sudo service mysql restart

# Install Postgresql
sudo apt-get install --yes --force-yes postgresql pgadmin3

# Install Node.js
sudo apt-get install --yes --force-yes nodejs npm

# Vim
mkdir -p ~/.vim/autoload ~/.vim/bundle
curl -Sso ~/.vim/autoload/pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim

# Make reference directory
mkdir -p ~/Workspace/reference